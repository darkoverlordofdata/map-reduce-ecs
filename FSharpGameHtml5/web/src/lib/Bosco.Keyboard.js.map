{"version":3,"sources":["..\\..\\..\\lib\\Bosco.Keyboard.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;4CAQ8B;AAAA;AAAA,O;;AACX;AAAA,4CAAe;AAAA;AAAA,WAAf;AAAwB;;AACf;AAAA;AAAgC;;AAEhD;AAAU;AACL,2BAAgB;AAAA;AAAA;AAAA;AAAA,SAAhB,GAA6B;AAAA;AAAA;AAAA;AAAA,SAA7B;AACT,4CAAe,wBAAf;AAFI;AAAO;;AAKX;AAAA,2CAAyC;AAAA;AAAA,SAAzC;AAAA,yCACuC;AAAA;AAAA,SADvC;AACwD","file":"Bosco.Keyboard.js","sourcesContent":["ï»¿namespace Bosco\r\n\r\nopen Fable.Core\r\nopen Fable.Import\r\nopen Fable.Import.Browser\r\nopen Fable.Core.JsInterop\r\n\r\nmodule Keyboard =\r\n    let mutable keysPressed = Set.empty\r\n    let reset () = keysPressed <- Set.empty\r\n    let isPressed keyCode = Set.contains keyCode keysPressed\r\n    let update (e : KeyboardEvent, pressed) =\r\n        let keyCode = int e.keyCode\r\n        let op = if pressed then Set.add else Set.remove\r\n        keysPressed <- op keyCode keysPressed\r\n        null\r\n    let init () =\r\n        window.addEventListener_keydown(fun e -> update(e, true))\r\n        window.addEventListener_keyup(fun e -> update(e, false))\r\n\r\n"]}